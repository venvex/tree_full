{"ast":null,"code":"var _jsxFileName = \"/Users/stefan-alexandrujoldes/webify/client/saintgobain/int/andrei/tree-node/multi1/src/components/Tree.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport \"../index.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchDropdown = () => {\n  //simulez fetch\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve([\"inactive\", \"active\", \"running\", \"paused\"]);\n    }, 500);\n  });\n};\nconst Tree = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_c = _s(({\n  nodeData,\n  handleUpdate,\n  parentNode\n}) => {\n  _s();\n  let [status, setStatus] = useState(nodeData.status);\n  //let [children, setChildren] = useState(nodeData.chil);\n  const [options, setOptions] = useState([]);\n  const getStatusClass = status => {\n    switch (status) {\n      case \"active\":\n        return \"status-active\";\n      case \"paused\":\n        return \"status-paused\";\n      case \"inactive\":\n        return \"status-inactive\";\n      default:\n        return \"\";\n    }\n  };\n  useEffect(() => {\n    setStatus(nodeData.status);\n    //setChildren(nodeData.chil);\n  }, [nodeData.status]);\n  useEffect(() => {\n    fetchDropdown().then(fetchedOptions => {\n      setOptions(fetchedOptions);\n    });\n  }, []);\n  const handleStatusChange = newStatus => {\n    //doar daca exista status nou\n    if (newStatus !== status) {\n      setStatus(newStatus); //\n    }\n  };\n  useEffect(() => {\n    //handleStatusChange(nodeData.status)\n    handleUpdate({\n      id: nodeData.id,\n      status,\n      chil: nodeData.chil\n    });\n  }, [status, nodeData.chil, nodeData.id, handleUpdate]);\n\n  // const internalHandleUpdate = (childData) => {\n  //   const updatedChildren = nodeData.chil.map((child) =>\n  //     child.id === childData.id ? childData : child\n  //   );\n  //   setChildren(updatedChildren);\n  // };\n\n  const handleAddChild = () => {\n    const newChild = {\n      id: Date.now(),\n      // de facut altfel\n      status: \"active\",\n      chil: []\n    };\n    const updatedNode = {\n      //nodul nou adaugt in lista\n      ...nodeData,\n      chil: [...nodeData.chil, newChild]\n    };\n    console.log(\"copil nou creat\", updatedNode);\n    handleUpdate(updatedNode); // propag\n  };\n  const handleDelete = () => {\n    if (parentNode && parentNode.chil) {\n      // pot sterge daca nu are copii\n      if (nodeData.chil && nodeData.chil.length === 0) {\n        // elimin nodul dupa id\n        const updatedChildren = parentNode.chil.filter(child => child.id !== nodeData.id);\n\n        // creez parinte nou cu lista de copii actuala\n        const updatedParent = {\n          ...parentNode,\n          chil: updatedChildren\n        };\n\n        // trigger la re-render\n        handleUpdate(updatedParent);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"node\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cerc\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: getStatusClass(nodeData.status),\n        children: nodeData.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), \" \", options.length > 0 ? /*#__PURE__*/_jsxDEV(\"select\", {\n        value: status,\n        onChange: event => handleStatusChange(event.target.value),\n        children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading options..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), nodeData.chil && nodeData.chil.length === 0 &&\n      /*#__PURE__*/\n      //afisez delete daca nu are copii\n      _jsxDEV(\"button\", {\n        onClick: handleDelete,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: nodeData.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"children\",\n      children: [nodeData.chil.map(chil => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree-container\",\n        children: /*#__PURE__*/_jsxDEV(Tree, {\n          nodeData: chil,\n          handleUpdate: handleUpdate,\n          parentNode: nodeData\n        }, chil.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addChildButton\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddChild,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}, \"dX6FduR9hzjZ3GdKjG0E295rKrM=\")), \"dX6FduR9hzjZ3GdKjG0E295rKrM=\");\n_c2 = Tree;\nexport default Tree;\nvar _c, _c2;\n$RefreshReg$(_c, \"Tree$React.memo\");\n$RefreshReg$(_c2, \"Tree\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","fetchDropdown","Promise","resolve","setTimeout","Tree","_s","memo","_c","nodeData","handleUpdate","parentNode","status","setStatus","options","setOptions","getStatusClass","then","fetchedOptions","handleStatusChange","newStatus","id","chil","handleAddChild","newChild","Date","now","updatedNode","console","log","handleDelete","length","updatedChildren","filter","child","updatedParent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","event","target","map","option","onClick","_c2","$RefreshReg$"],"sources":["/Users/stefan-alexandrujoldes/webify/client/saintgobain/int/andrei/tree-node/multi1/src/components/Tree.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport \"../index.css\";\nimport { useState } from \"react\";\n\nconst fetchDropdown = () => {\n  //simulez fetch\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve([\"inactive\", \"active\", \"running\", \"paused\"]);\n    }, 500);\n  });\n};\n\nconst Tree = React.memo(({ nodeData, handleUpdate, parentNode }) => {\n  let [status, setStatus] = useState(nodeData.status);\n  //let [children, setChildren] = useState(nodeData.chil);\n  const [options, setOptions] = useState([]);\n\n  const getStatusClass = (status) => {\n    switch (status) {\n      case \"active\":\n        return \"status-active\";\n      case \"paused\":\n        return \"status-paused\";\n      case \"inactive\":\n        return \"status-inactive\";\n      default:\n        return \"\";\n    }\n  };\n\n  useEffect(() => {\n    setStatus(nodeData.status);\n    //setChildren(nodeData.chil);\n  }, [nodeData.status]);\n\n  useEffect(() => {\n    fetchDropdown().then((fetchedOptions) => {\n      setOptions(fetchedOptions);\n    });\n  }, []);\n\n  const handleStatusChange = (newStatus) => {\n    //doar daca exista status nou\n    if (newStatus !== status) {\n      setStatus(newStatus); //\n    }\n  };\n\n  useEffect(() => {\n    //handleStatusChange(nodeData.status)\n    handleUpdate({ id: nodeData.id, status, chil: nodeData.chil });\n  }, [status, nodeData.chil, nodeData.id, handleUpdate]);\n\n  // const internalHandleUpdate = (childData) => {\n  //   const updatedChildren = nodeData.chil.map((child) =>\n  //     child.id === childData.id ? childData : child\n  //   );\n  //   setChildren(updatedChildren);\n  // };\n\n  const handleAddChild = () => {\n    const newChild = {\n      id: Date.now(), // de facut altfel\n      status: \"active\",\n      chil: [],\n    };\n\n    const updatedNode = {\n      //nodul nou adaugt in lista\n      ...nodeData,\n      chil: [...nodeData.chil, newChild],\n    };\n\n    console.log(\"copil nou creat\", updatedNode);\n    handleUpdate(updatedNode); // propag\n  };\n\n  const handleDelete = () => {\n    if (parentNode && parentNode.chil) {\n      // pot sterge daca nu are copii\n      if (nodeData.chil && nodeData.chil.length === 0) {\n        // elimin nodul dupa id\n        const updatedChildren = parentNode.chil.filter(\n          (child) => child.id !== nodeData.id\n        );\n\n        // creez parinte nou cu lista de copii actuala\n        const updatedParent = {\n          ...parentNode,\n          chil: updatedChildren,\n        };\n\n        // trigger la re-render\n        handleUpdate(updatedParent);\n      }\n    }\n  };\n\n  return (\n    <div className=\"node\">\n      <div className=\"cerc\">\n        <div className={getStatusClass(nodeData.status)}>{nodeData.status}</div>{\" \"}\n        {options.length > 0 ? (\n          <select\n            value={status}\n            onChange={(event) => handleStatusChange(event.target.value)}\n          >\n            {options.map((option) => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        ) : (\n          <div>Loading options..</div>\n        )}\n        {/* <input\n          type=\"text\"\n          value={status}\n          onInput={(event) => {\n            handleStatusChange(event.target.value);\n          }}\n        /> */}\n        {/* <button onClick={() => handleStatusChange(\"running\")}>Play</button> */}\n        {nodeData.chil &&\n          nodeData.chil.length === 0 && ( //afisez delete daca nu are copii\n            <button onClick={handleDelete}>-</button>\n          )}\n        <div>{nodeData.status}</div>\n      </div>\n      {/* {nodeData.chil && nodeData.chil.length > 0 && (  */}{\" \"}\n      {/*afisez div gol pentru button de add, de vazut*/}\n      <div className=\"children\">\n        {nodeData.chil.map((chil) => (\n          <div className=\"tree-container\">\n            <Tree\n              key={chil.id}\n              nodeData={chil}\n              handleUpdate={handleUpdate}\n              parentNode={nodeData}\n            />\n          </div>\n        ))}\n        <div className=\"addChildButton\">\n          <button onClick={handleAddChild}>+</button>{\" \"}\n          {/*apelez functia dupa randare*/}\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default Tree;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}